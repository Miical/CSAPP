# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    irmovq $8, %r8
    call main
    halt

# Sample data
.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

main:
    irmovq src, %rdi
    irmovq dest, %rsi
    irmovq $3, %rdx
    call copy_block
    ret

# long copy_block(long *src, long *dest, long len)
# *src in %rdi, *dest in %rsi, len in %rdx
copy_block:
    irmovq $0, %rax
    andq %rdx, %rdx
    jmp test

loop:
    mrmovq (%rdi), %r10
    rmmovq %r10, (%rsi)
    xorq %r10, %rax
    addq %r8, %rdi
    addq %r8, %rsi
    irmovq $1, %r10
    subq %r10, %rdx

test:
    jg loop
    ret

# Static starts here and grows to lower addresses
    .pos 0x200
stack:
