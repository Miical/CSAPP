# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    call main
    halt

# Sample linked list
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0


main:
    irmovq ele1, %rdi
    irmovq $8, %r8
    call rsum_list
    ret

# long rsum_list(list_ptr ls)
# first element address in %rdi
rsum_list:
    irmovq $0, %rax
    andq %rdi, %rdi
    je end

    subq %r8, %rsp
    mrmovq (%rdi), %r11
    rmmovq %r11, (%rsp)

    mrmovq $8(%rdi), %rdi
    call rsum_list
    mrmovq (%rsp), %r11
    addq %r11, %rax

    addq %r8, %rsp
end:
    ret

# Static starts here and grows to lower addresses
    .pos 0x200
stack:
